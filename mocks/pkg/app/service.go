// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/app/service.go

// Package mock_app is a generated GoMock package.
package mock_app

import (
	names "github.com/areknoster/table-driven-tests-gomock/pkg/names"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MocknamesLister is a mock of namesLister interface
type MocknamesLister struct {
	ctrl     *gomock.Controller
	recorder *MocknamesListerMockRecorder
}

// MocknamesListerMockRecorder is the mock recorder for MocknamesLister
type MocknamesListerMockRecorder struct {
	mock *MocknamesLister
}

// NewMocknamesLister creates a new mock instance
func NewMocknamesLister(ctrl *gomock.Controller) *MocknamesLister {
	mock := &MocknamesLister{ctrl: ctrl}
	mock.recorder = &MocknamesListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MocknamesLister) EXPECT() *MocknamesListerMockRecorder {
	return m.recorder
}

// ListNames mocks base method
func (m *MocknamesLister) ListNames(who names.Group) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNames", who)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNames indicates an expected call of ListNames
func (mr *MocknamesListerMockRecorder) ListNames(who interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNames", reflect.TypeOf((*MocknamesLister)(nil).ListNames), who)
}
