// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/party/helloer.go

// Package mock_party is a generated GoMock package.
package mock_party

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHelloer is a mock of Helloer interface
type MockHelloer struct {
	ctrl     *gomock.Controller
	recorder *MockHelloerMockRecorder
}

// MockHelloerMockRecorder is the mock recorder for MockHelloer
type MockHelloerMockRecorder struct {
	mock *MockHelloer
}

// NewMockHelloer creates a new mock instance
func NewMockHelloer(ctrl *gomock.Controller) *MockHelloer {
	mock := &MockHelloer{ctrl: ctrl}
	mock.recorder = &MockHelloerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHelloer) EXPECT() *MockHelloerMockRecorder {
	return m.recorder
}

// Hello mocks base method
func (m *MockHelloer) Hello(name string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hello", name)
	ret0, _ := ret[0].(string)
	return ret0
}

// Hello indicates an expected call of Hello
func (mr *MockHelloerMockRecorder) Hello(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hello", reflect.TypeOf((*MockHelloer)(nil).Hello), name)
}
